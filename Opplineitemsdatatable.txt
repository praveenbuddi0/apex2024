<template>
    <lightning-card>
        <div style="height: 300px;" class="slds-p-around_small">
            <template if:true={opplineitems}>
                <lightning-datatable key-field="id" data={opplineitems} show-row-number-column
                    row-number-offset={rowOffset} suppress-bottom-bar columns={columns} onrowaction={handleRowAction} onsave={handleSave}>
                </lightning-datatable>
                <div slot="footer" class="slds-grid">
                    <div class="slds-col slds-text-align_center">
                        <lightning-button variant="brand" label="Save" onclick={saveRows}></lightning-button>
                    </div>
                </div>
            </template>
        </div>
    </lightning-card>
</template>

-------------------------------------------------------
#JS 

import { LightningElement,api,wire,track } from 'lwc';
import { updateRecord } from 'lightning/uiRecordApi';
import { deleteRecord } from 'lightning/uiRecordApi';
import { ShowToastEvent } from 'lightning/platformShowToastEvent';
import { refreshApex } from "@salesforce/apex";
import getopplineitems from '@salesforce/apex/OpplineitemsdatatableHandler.getopplineitems';


const columns = [
    { label: 'Opportunity Product Name', fieldName: 'Name' },
    { label: 'Quantity', fieldName: 'Quantity', type: 'Number' },
    { label: 'Sales Price', fieldName: 'UnitPrice', type: 'Currency', editable: true},
    { label: 'List Price', fieldName: 'ListPrice', type: 'Currency', editable : true},
    { label: 'Discount Type', fieldName: 'Discount_Type__c', type: 'pickList', editable: true},
    {
        type: 'button-icon',
        typeAttributes:
        {
            iconName: 'utility:delete',
            name: 'delete',
            iconClass: 'slds-icon-text-error'
        }
    }
    
];
export default class Opplineitemsdatatable extends LightningElement {
    saveDraftValues = [];
    columns = columns;
    refreshtable;
    showme = false;
    norecords = false;
    savedraftvalues;
    @track opplineitems = [];
    @api recordId;
    
    @wire(getopplineitems,{recId :'$recordId'})
     opplineitemsdata(response){
         this.refreshtable = response;
        if(response){
            //console.log('data :'+JSON.stringify(data))
            this.opplineitems = response.data;
            //console.log('dataToRefresh :'+JSON.stringify(data));
        }  
     }
     
     handleRowAction(event){
        let olircdId = event.detail.row.Id
        console.log('index :'+olircdId);
        if(event.detail.action.name === 'delete'){
            deleteRecord(olircdId).then(result=>{
                    this.showToastMessage('Success' , 'OLI record Deleted Successfully','Record Deleted');

                    //Refresh Data
                    refreshApex(this.refreshtable);
            })
            
        }
        
     }

     handleSave(event){
        console.log('draft :',event.detail.event.detail.draftValues);
        this.savedraftvalues = event.detail.event.detail.draftValues.slice().map((draftValue) => {
            const fields = Object.assign({}, draftValue);
            return { fields };
        });
        
        const recordUpdatePromises = savedraftvalues.map((record) => updateRecord(record));
        if(recordUpdatePromises != null){
            this.showToastMessage('Success' , 'OLI record Updated Successfully','Record Updated');
        }

     }

     saveRows(event){
        this.handleSave();
     }

     showToastMessage(variant, message, title) {
        this.dispatchEvent(
            new ShowToastEvent({
                title: title,
                message: message,
                variant: variant
            })
        );
    }

    refreshComponent(){
        
    }
 
}

-----------------------------------------------------------------------------------

#Class

public with sharing class OpplineitemsdatatableHandler {
    @AuraEnabled(cacheable = true)
    public static List<OpportunityLineItem> getopplineitems(string recId){
        List<OpportunityLineItem> opplineitems = new  List<OpportunityLineItem>();
        if(recId != '' || recId != null){
             opplineitems = [SELECT UnitPrice,Name,Quantity,Discount_Type__c,ListPrice FROM OpportunityLineItem WHERE OpportunityId =: recId];
        }
        return opplineitems;
    }
}